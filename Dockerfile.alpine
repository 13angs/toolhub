# Dockerfile for Alpine Linux distribution (python:3.11-alpine)
# Optimized for the smallest possible image size.

# --- STAGE 1: Build Stage ---
FROM python:3.11-alpine AS builder

# Set environment variables
ENV PYTHONDONTWRITEBYTECODE=1
ENV PYTHONUNBUFFERED=1
ENV POETRY_VERSION=1.8.2

# Set the working directory
WORKDIR /app

# Install build-time system dependencies using apk
RUN apk update && \
    apk add --no-cache \
    ffmpeg \
    curl \
    build-base \
    portaudio-dev \
    alsa-lib-dev

# Install Poetry
RUN pip install "poetry==${POETRY_VERSION}"

# Copy dependency definition files
COPY pyproject.toml poetry.lock* ./

# Disable virtual environment creation by Poetry
RUN poetry config virtualenvs.create false

# Install project dependencies
RUN poetry install --no-dev --no-interaction --no-ansi

# Copy the application source code
COPY . .


# --- STAGE 2: Final Stage ---
FROM python:3.11-alpine AS final

# Set environment variables
ENV PYTHONDONTWRITEBYTECODE=1
ENV PYTHONUNBUFFERED=1

# Set the working directory
WORKDIR /app

# Install only the necessary runtime system dependencies
# --- V V V THE FIX IS HERE V V V ---
RUN apk add --no-cache \
    ffmpeg \
    portaudio \
    alsa-lib

# Copy installed Python packages from the builder stage
COPY --from=builder /usr/local/lib/python3.11/site-packages /usr/local/lib/python3.11/site-packages

# Copy application code from the builder stage
COPY --from=builder /app /app

# Create a non-root user for security (Alpine-specific commands)
RUN addgroup -S appgroup && adduser -S appuser -G appgroup
USER appuser

# Define the entrypoint
ENTRYPOINT ["python", "toolhub.py"]

# Set the default command
CMD ["--help"]